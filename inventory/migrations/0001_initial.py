# Generated by Django 5.2.1 on 2025-09-02 18:00

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('stores', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AttributeType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Название')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='Слаг')),
                ('is_filterable', models.BooleanField(default=False, verbose_name='Фильтруемый ли?')),
            ],
            options={
                'verbose_name': 'Тип атрибута',
                'verbose_name_plural': 'Типы атрибутов',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SizeChart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Название')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
            ],
            options={
                'verbose_name': 'Таблица размеров',
                'verbose_name_plural': 'Таблицы размеров',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='AttributeValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=225, verbose_name='Значение')),
                ('slug', models.SlugField(max_length=225, unique=True, verbose_name='Слаг')),
                ('ordering', models.PositiveIntegerField(default=0, verbose_name='Порядок')),
                ('attribute_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='values', to='inventory.attributetype', verbose_name='Тип атрибута')),
            ],
            options={
                'verbose_name': 'Значение атрибута',
                'verbose_name_plural': 'Значения атрибутов',
                'ordering': ['ordering', 'value'],
                'unique_together': {('attribute_type', 'slug')},
            },
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Название')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('store', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='stores.store', verbose_name='Магазин')),
            ],
            options={
                'verbose_name': 'Категория товара',
                'verbose_name_plural': 'Категории товаров',
                'ordering': ['name'],
                'unique_together': {('store', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('barcode', models.CharField(blank=True, db_index=True, max_length=100, null=True, unique=True, verbose_name='Штрих-код')),
                ('unit', models.CharField(choices=[('piece', 'Штука')], default='piece', max_length=50, verbose_name='Единица измерения')),
                ('sale_price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Цена продажи')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('image_label', models.ImageField(blank=True, null=True, upload_to='product_labels/', verbose_name='Изображение этикетки')),
                ('attributes', models.ManyToManyField(blank=True, related_name='products', to='inventory.attributevalue', verbose_name='Атрибуты')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products_created', to=settings.AUTH_USER_MODEL, verbose_name='Создан пользователем')),
                ('store', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='stores.store', verbose_name='Магазин')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='products', to='inventory.productcategory', verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Товар',
                'verbose_name_plural': 'Товары',
            },
        ),
        migrations.CreateModel(
            name='SizeInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size', models.CharField(max_length=50, verbose_name='Размер')),
                ('chest', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Обхват груди')),
                ('waist', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Обхват талии')),
                ('length', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Длина')),
            ],
            options={
                'verbose_name': 'Размерная информация',
                'verbose_name_plural': 'Размерные информации',
                'unique_together': {('size',)},
            },
        ),
        migrations.CreateModel(
            name='ProductBatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Количество')),
                ('purchase_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Цена закупки')),
                ('supplier', models.CharField(blank=True, max_length=255, null=True, verbose_name='Поставщик')),
                ('expiration_date', models.DateField(blank=True, null=True, verbose_name='Дата истечения')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='batches', to='inventory.product')),
                ('store', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='stores.store', verbose_name='Магазин')),
                ('size', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory.sizeinfo', verbose_name='Размер')),
            ],
            options={
                'verbose_name': 'Партия товара',
                'verbose_name_plural': 'Партии товаров',
                'ordering': ['expiration_date', 'created_at'],
            },
        ),
        migrations.AddField(
            model_name='product',
            name='size',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory.sizeinfo'),
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Количество')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='stock', to='inventory.product', verbose_name='Товар')),
                ('store', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='stores.store', verbose_name='Магазин')),
            ],
            options={
                'verbose_name': 'Остаток на складе',
                'verbose_name_plural': 'Остатки на складе',
            },
        ),
        migrations.CreateModel(
            name='ProductAttribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attribute_value', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_attributes', to='inventory.attributevalue', verbose_name='Значение атрибута')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_attributes', to='inventory.product', verbose_name='Товар')),
            ],
            options={
                'verbose_name': 'Атрибут товара',
                'verbose_name_plural': 'Атрибуты товаров',
                'unique_together': {('product', 'attribute_value')},
            },
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['name', 'barcode'], name='inventory_p_name_6d311d_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['store', 'name'], name='inventory_p_store_i_f8e704_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['store', 'barcode'], name='inventory_p_store_i_bd55a4_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='product',
            unique_together={('store', 'barcode')},
        ),
    ]
