# Generated by Django 5.2.1 on 2025-07-28 07:38

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('inventory', '0003_alter_product_options_alter_productbatch_options_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='AttributeType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Название')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='Слаг')),
                ('is_filterable', models.BooleanField(default=False, verbose_name='Фильтруемый ли?')),
            ],
            options={
                'verbose_name': 'Тип атрибута',
                'verbose_name_plural': 'Типы атрибутов',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SizeChart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Название')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
            ],
            options={
                'verbose_name': 'Таблица размеров',
                'verbose_name_plural': 'Таблицы размеров',
                'ordering': ['name'],
            },
        ),
        migrations.AlterField(
            model_name='product',
            name='barcode',
            field=models.CharField(blank=True, db_index=True, max_length=100, null=True, unique=True, verbose_name='Штрих-код'),
        ),
        migrations.AlterField(
            model_name='product',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='products', to='inventory.productcategory', verbose_name='Категория'),
        ),
        migrations.AlterField(
            model_name='product',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, verbose_name='Дата создания'),
        ),
        migrations.AlterField(
            model_name='product',
            name='name',
            field=models.CharField(max_length=255, unique=True, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='product',
            name='sale_price',
            field=models.DecimalField(decimal_places=2, default=0.0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Цена продажи'),
        ),
        migrations.AlterField(
            model_name='product',
            name='unit',
            field=models.CharField(choices=[('piece', 'Штука')], default='piece', max_length=50, verbose_name='Единица измерения'),
        ),
        migrations.AlterField(
            model_name='productbatch',
            name='expiration_date',
            field=models.DateField(blank=True, null=True, verbose_name='Дата истечения'),
        ),
        migrations.AlterField(
            model_name='productbatch',
            name='purchase_price',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Цена закупки'),
        ),
        migrations.AlterField(
            model_name='productbatch',
            name='quantity',
            field=models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Количество'),
        ),
        migrations.AlterField(
            model_name='productbatch',
            name='supplier',
            field=models.CharField(blank=True, max_length=255, verbose_name='Поставщик'),
        ),
        migrations.AlterField(
            model_name='productcategory',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, verbose_name='Дата создания'),
        ),
        migrations.AlterField(
            model_name='productcategory',
            name='name',
            field=models.CharField(max_length=255, unique=True, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='stock',
            name='product',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='stock', to='inventory.product', verbose_name='Товар'),
        ),
        migrations.AlterField(
            model_name='stock',
            name='quantity',
            field=models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Количество'),
        ),
        migrations.CreateModel(
            name='AttributeValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=225, verbose_name='Значение')),
                ('slug', models.SlugField(max_length=225, unique=True, verbose_name='Слаг')),
                ('ordering', models.PositiveIntegerField(default=0, verbose_name='Порядок')),
                ('attribute_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='values', to='inventory.attributetype', verbose_name='Тип атрибута')),
            ],
            options={
                'verbose_name': 'Значение атрибута',
                'verbose_name_plural': 'Значения атрибутов',
                'ordering': ['ordering', 'value'],
                'unique_together': {('attribute_type', 'slug')},
            },
        ),
        migrations.AddField(
            model_name='product',
            name='attributes',
            field=models.ManyToManyField(blank=True, related_name='products', to='inventory.attributevalue', verbose_name='Атрибуты'),
        ),
        migrations.CreateModel(
            name='ProductAttribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attribute_value', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_attributes', to='inventory.attributevalue', verbose_name='Значение атрибута')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_attributes', to='inventory.product', verbose_name='Товар')),
            ],
            options={
                'verbose_name': 'Атрибут товара',
                'verbose_name_plural': 'Атрибуты товаров',
                'unique_together': {('product', 'attribute_value')},
            },
        ),
        migrations.CreateModel(
            name='SizeInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chest', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Обхват груди')),
                ('waist', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Обхват талии')),
                ('length', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Длина')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='size_info', to='inventory.product', verbose_name='Продукт')),
                ('size', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='size_info', to='inventory.attributevalue', verbose_name='Размер')),
            ],
            options={
                'verbose_name': 'Размерная информация',
                'verbose_name_plural': 'Размерные информации',
                'unique_together': {('product', 'size')},
            },
        ),
    ]
